{pkgs, ...}: {
  home.packages = with pkgs; [
    alejandra
{{- if ne .chezmoi.os "darwin" }}
    bat
    cpplint
{{- end }}
    deadnix
{{- if ne .chezmoi.os "darwin" }}
    direnv
    exa
    git
    htop
    jq
    kubectl
    kubernetes-helm
    neovim-remote
    pre-commit
    sqlfluff
{{- end }}
    statix
{{- if ne .chezmoi.os "darwin" }}
    terraform
{{- end }}
  ];

  # Let Home Manager install and manage itself.
  programs = {
    home-manager.enable = true;
  };

  # Home Manager needs a bit of information about you and the
  # paths it should manage.
  home.username = "jrubin";
  home.homeDirectory = "{{ .chezmoi.homeDir }}";

  # This value determines the Home Manager release that your
  # configuration is compatible with. This helps avoid breakage
  # when a new Home Manager release introduces backwards
  # incompatible changes.
  #
  # You can update Home Manager without changing this value. See
  # the Home Manager release notes for a list of state version
  # changes in each release.
  home.stateVersion = "22.11";
{{ if ne .chezmoi.os "darwin" }}
  programs.readline = {
    enable = true;
    includeSystemConfig = false;
    extraConfig = "set editing-mode vi";
  };

  programs.direnv = {
    enable = true;
    nix-direnv.enable = true;
  };

  services = {
    lorri.enable = true;
  };
{{- end }}
}
# vim: ft=nix
