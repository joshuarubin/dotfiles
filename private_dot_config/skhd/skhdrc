# ################################################################ #
#
# A list of all built-in modifier and literal keywords can
# be found at https://github.com/koekeishiya/skhd/issues/1
#
# A hotkey is written according to the following rules:
#
#   hotkey       = <mode> '<' <action> | <action>
#
#   mode         = 'name of mode' | <mode> ',' <mode>
#
#   action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                  <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                  <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#   keysym       = <mod> '-' <key> | <key>
#
#   mod          = 'modifier keyword' | <mod> '+' <mod>
#
#   key          = <literal> | <keycode>
#
#   literal      = 'single letter or built-in keyword'
#
#   keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#   proc_map_lst = * <proc_map>
#
#   proc_map     = <string> ':' <command> | <string>     '~' |
#                  '*'      ':' <command> | '*'          '~'
#
#   string       = '"' 'sequence of characters' '"'
#
#   command      = command is executed through '$SHELL -c' and
#                  follows valid shell syntax. if the $SHELL environment
#                  variable is not set, it will default to '/bin/bash'.
#                  when bash is used, the ';' delimeter can be specified
#                  to chain commands.
#
#                  to allow a command to extend into multiple lines,
#                  prepend '\' at the end of the previous line.
#
#                  an EOL character signifies the end of the bind.
#
#   ->           = keypress is not consumed by skhd
#
#   *            = matches every application not specified in <proc_map_lst>
#
#   ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
# A mode is declared according to the following rules:
#
#   mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#               '::' <name> '@'               | '::' <name>
#
#   name      = desired name for this mode,
#
#   @         = capture keypresses regardless of being bound to an action
#
#   command   = command is executed through '$SHELL -c' and
#               follows valid shell syntax. if the $SHELL environment
#               variable is not set, it will default to '/bin/bash'.
#               when bash is used, the ';' delimeter can be specified
#               to chain commands.
#
#               to allow a command to extend into multiple lines,
#               prepend '\' at the end of the previous line.
#
#               an EOL character signifies the end of the bind.


# Move your focus around

alt - h : yabai -m window --focus west || yabai -m display --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east || yabai -m display --focus east

alt + shift - h : yabai -m window --warp west || (yabai -m window --display west && yabai -m display --focus west)
alt + shift - j : yabai -m window --warp south
alt + shift - k : yabai -m window --warp north
alt + shift - l : yabai -m window --warp east || (yabai -m window --display east && yabai -m display --focus east)

alt - 0x21 : prev="$(yabai -m query --spaces --display | jq -r 'sort_by(.index) as $spaces | $spaces | (map(select(.["has-focus"] == true)) | .[].index) as $focused | $spaces | map(select(.index < $focused))[-1].index // $focused')" && \
             yabai -m space --focus "${prev}"

alt - 0x1E : next="$(yabai -m query --spaces --display | jq -r 'sort_by(.index) as $spaces | $spaces | (map(select(.["has-focus"] == true)) | .[].index) as $focused | $spaces | map(select(.index > $focused))[0].index // $focused')" && \
             yabai -m space --focus "${next}"

alt + shift - 0x21 : prev="$(yabai -m query --spaces --display | jq -r 'sort_by(.index) as $spaces | $spaces | (map(select(.["has-focus"] == true)) | .[].index) as $focused | $spaces | map(select(.index < $focused))[-1].index // $focused')" && \
                     yabai -m space --move "${prev}"; \
                     /usr/local/bin/hs -c 'YabaiBar:update()'

alt + shift - 0x1E : next="$(yabai -m query --spaces --display | jq -r 'sort_by(.index) as $spaces | $spaces | (map(select(.["has-focus"] == true)) | .[].index) as $focused | $spaces | map(select(.index > $focused))[0].index // $focused')" && \
                     yabai -m space --move "${next}"; \
                     /usr/local/bin/hs -c 'YabaiBar:update()'

alt - 1 : ( \
            [ "$(yabai -m query --spaces --space | jq -r '.index')" -eq 1 ] || \
            yabai -m space --focus 1 \
          ) || ( \
            yabai -m space --create && \
            index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
            yabai -m space --focus "${index}" \
          )
alt - 2 : ( \
            [ "$(yabai -m query --spaces --space | jq -r '.index')" -eq 2 ] || \
            yabai -m space --focus 2 \
          ) || ( \
            yabai -m space --create && \
            index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
            yabai -m space --focus "${index}" \
          )
alt - 3 : ( \
            [ "$(yabai -m query --spaces --space | jq -r '.index')" -eq 3 ] || \
            yabai -m space --focus 3 \
          ) || ( \
            yabai -m space --create && \
            index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
            yabai -m space --focus "${index}" \
          )
alt - 4 : ( \
            [ "$(yabai -m query --spaces --space | jq -r '.index')" -eq 4 ] || \
            yabai -m space --focus 4 \
          ) || ( \
            yabai -m space --create && \
            index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
            yabai -m space --focus "${index}" \
          )
alt - 5 : ( \
            [ "$(yabai -m query --spaces --space | jq -r '.index')" -eq 5 ] || \
            yabai -m space --focus 5 \
          ) || ( \
            yabai -m space --create && \
            index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
            yabai -m space --focus "${index}" \
          )
alt - 6 : ( \
            [ "$(yabai -m query --spaces --space | jq -r '.index')" -eq 6 ] || \
            yabai -m space --focus 6 \
          ) || ( \
            yabai -m space --create && \
            index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
            yabai -m space --focus "${index}" \
          )
alt - 7 : ( \
            [ "$(yabai -m query --spaces --space | jq -r '.index')" -eq 7 ] || \
            yabai -m space --focus 7 \
          ) || ( \
            yabai -m space --create && \
            index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
            yabai -m space --focus "${index}" \
          )
alt - 8 : ( \
            [ "$(yabai -m query --spaces --space | jq -r '.index')" -eq 8 ] || \
            yabai -m space --focus 8 \
          ) || ( \
            yabai -m space --create && \
            index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
            yabai -m space --focus "${index}" \
          )
alt - 9 : ( \
            [ "$(yabai -m query --spaces --space | jq -r '.index')" -eq 9 ] || \
            yabai -m space --focus 9 \
          ) || ( \
            yabai -m space --create && \
            index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
            yabai -m space --focus "${index}" \
          )


alt + shift - 1 : yabai -m window --space 1 || ( \
                    yabai -m space --create && \
                    index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
                    yabai -m window --space "${index}" \
                  )
alt + shift - 2 : yabai -m window --space 2 || ( \
                    yabai -m space --create && \
                    index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
                    yabai -m window --space "${index}" \
                  )
alt + shift - 3 : yabai -m window --space 3 || ( \
                    yabai -m space --create && \
                    index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
                    yabai -m window --space "${index}" \
                  )
alt + shift - 4 : yabai -m window --space 4 || ( \
                    yabai -m space --create && \
                    index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
                    yabai -m window --space "${index}" \
                  )
alt + shift - 5 : yabai -m window --space 5 || ( \
                    yabai -m space --create && \
                    index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
                    yabai -m window --space "${index}" \
                  )
alt + shift - 6 : yabai -m window --space 6 || ( \
                    yabai -m space --create && \
                    index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
                    yabai -m window --space "${index}" \
                  )
alt + shift - 7 : yabai -m window --space 7 || ( \
                    yabai -m space --create && \
                    index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
                    yabai -m window --space "${index}" \
                  )
alt + shift - 8 : yabai -m window --space 8 || ( \
                    yabai -m space --create && \
                    index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
                    yabai -m window --space "${index}" \
                  )
alt + shift - 9 : yabai -m window --space 9 || ( \
                    yabai -m space --create && \
                    index="$(yabai -m query --spaces --display | jq -r 'map(select(.["is-native-fullscreen"] == false))[-1].index')" && \
                    yabai -m window --space "${index}" \
                  )

# balance size of windows
alt - 0x18 : yabai -m space --balance # =

# toggle window zoom
alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window split type
alt - e : yabai -m window --toggle split

# float / unfloat window and center on screen
# alt - comma
alt - 0x2B : yabai -m window --toggle float; \
             yabai -m window --grid 4:4:1:1:2:2

# toggle sticky(+float)
# alt - period
alt - 0x2F : yabai -m window --toggle sticky

# toggle topmost
alt - t : yabai -m window --toggle topmost

alt - o [
  "Obsidian": yabai -m window --focus recent
  *: open -a Obsidian
]

cmd - return [
  "kitty" ~
  "WezTerm" ~
  *: open -n -a WezTerm
]
